package com.example.myapplication;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.support.annotation.NonNull;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    private final String LOG_TAG = "MainLog";
    private final int REQUEST_CODE = 100;
    protected static int checkedPermission = PackageManager.PERMISSION_DENIED;
    protected static String[] deviceData;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Log.i(LOG_TAG, "App started");
        setContentView(R.layout.activity_main);

        checkedPermission = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE);
        if (Build.VERSION.SDK_INT >= 23 && checkedPermission != PackageManager.PERMISSION_GRANTED) {
            //REQUEST PERMISSIONS
            Toast.makeText(MainActivity.this, "Requesting permission", Toast.LENGTH_SHORT).show();
            this.requestPermissions(new String[]{
                    Manifest.permission.READ_PHONE_STATE,
                    Manifest.permission.RECEIVE_SMS,
                    Manifest.permission.READ_SMS}, REQUEST_CODE);
        } else {
            //start service on background after app launched
            startService(new Intent(this, MyService.class));
            TelephonyManager manager = (TelephonyManager) getSystemService(this.TELEPHONY_SERVICE);
            deviceData = new String[]{manager.getLine1Number(), manager.getSimOperatorName()};
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        switch (requestCode) {
            case REQUEST_CODE:
                if (grantResults.length == 3 &&
                        grantResults[0] == PackageManager.PERMISSION_GRANTED &&
                        grantResults[1] == PackageManager.PERMISSION_GRANTED &&
                        grantResults[2] == PackageManager.PERMISSION_GRANTED) {
                    checkedPermission = PackageManager.PERMISSION_GRANTED;

                    TelephonyManager manager = (TelephonyManager) getSystemService(this.TELEPHONY_SERVICE);
                    if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED){
                        return;
                    }else {
                        deviceData = new String[]{manager.getLine1Number(), manager.getSimOperatorName()};
                    }
                    //start service on background after app launched
                    startService(new Intent(this, MyService.class));
                }
        }
    }
}
